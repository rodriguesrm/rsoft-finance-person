// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RSoft.Person.Infra;

namespace RSoft.Person.Infra.Migrations
{
    [DbContext(typeof(PersonContext))]
    [Migration("20220429133522_InitialCreateDb")]
    partial class InitialCreateDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("RSoft.Person.Infra.Tables.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ChangedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ChangedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<ulong>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LastName");

                    b.Property<string>("Note")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("Note");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PhoneNumber");

                    b.HasKey("Id");

                    b.HasIndex("ChangedBy")
                        .HasDatabaseName("IX_Person_ChangedBy");

                    b.HasIndex("ChangedOn")
                        .HasDatabaseName("IX_Person_ChangedOn");

                    b.HasIndex("CreatedBy")
                        .HasDatabaseName("IX_Person_CreatedBy");

                    b.HasIndex("CreatedOn")
                        .HasDatabaseName("IX_Person_CreatedOn");

                    b.HasIndex("FirstName", "LastName")
                        .HasDatabaseName("IX_Person_FullName");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("RSoft.Person.Infra.Tables.PersonAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AddressNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("AddressNumber");

                    b.Property<string>("City")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("City");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("District");

                    b.Property<Guid?>("PersonId")
                        .IsRequired()
                        .HasColumnType("char(36)")
                        .HasColumnName("PersonId");

                    b.Property<string>("SecondaryAddress")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("SecondaryAddress");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("State");

                    b.Property<string>("StreetName")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("StreetName");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("Title");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .HasDatabaseName("IX_PersonAddress_PersonId");

                    b.HasIndex("Title")
                        .IsUnique()
                        .HasDatabaseName("AK_PersonAddress_Title");

                    b.ToTable("PersonAddress");
                });

            modelBuilder.Entity("RSoft.Person.Infra.Tables.PersonType", b =>
                {
                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.Property<sbyte>("Type")
                        .HasColumnType("tinyint")
                        .HasColumnName("Type");

                    b.HasKey("PersonId");

                    b.HasIndex("PersonId")
                        .HasDatabaseName("IX_PersonType_PersonId");

                    b.ToTable("PersonType");
                });

            modelBuilder.Entity("RSoft.Person.Infra.Tables.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<ulong>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LastName");

                    b.HasKey("Id");

                    b.HasIndex("FirstName", "LastName")
                        .HasDatabaseName("IX_User_FullName");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RSoft.Person.Infra.Tables.Person", b =>
                {
                    b.HasOne("RSoft.Person.Infra.Tables.User", "ChangedAuthor")
                        .WithMany("ChangedPersons")
                        .HasForeignKey("ChangedBy")
                        .HasConstraintName("FK_User_Person_ChangedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RSoft.Person.Infra.Tables.User", "CreatedAuthor")
                        .WithMany("CreatedPersons")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_User_Person_CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChangedAuthor");

                    b.Navigation("CreatedAuthor");
                });

            modelBuilder.Entity("RSoft.Person.Infra.Tables.PersonAddress", b =>
                {
                    b.HasOne("RSoft.Person.Infra.Tables.Person", "Person")
                        .WithMany("Addresses")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_Person_PersonAddress_PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("RSoft.Person.Infra.Tables.PersonType", b =>
                {
                    b.HasOne("RSoft.Person.Infra.Tables.Person", "Person")
                        .WithMany("Types")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_Person_PersonType_PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("RSoft.Person.Infra.Tables.Person", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Types");
                });

            modelBuilder.Entity("RSoft.Person.Infra.Tables.User", b =>
                {
                    b.Navigation("ChangedPersons");

                    b.Navigation("CreatedPersons");
                });
#pragma warning restore 612, 618
        }
    }
}
